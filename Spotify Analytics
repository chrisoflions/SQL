CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

SELECT * FROM BIT_DB.Spotifydata;

-- What is the average danceability by artist and track?
SELECT AVG(danceability), artist_name, track_name
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY AVG(Danceability) desc;

-- Who are the top 10 artists based on popularity?
SELECT artist_name, track_name,popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10
;

-- What artist released the longest song? 
SELECT MAX(duration_ms), artist_name, track_name
FROM BIT_DB.Spotifydata;

-- The 12 longest songs
SELECT duration_ms, artist_name, track_name
FROM BIT_DB.Spotifydata
ORDER BY duration_ms desc
LIMIT 12;

-- The shortest song
SELECT MIN(duration_ms), artist_name, track_name
FROM BIT_DB.Spotifydata;

-- Determine the average popularity, danceability, and energy by artist and track
SELECT 
artist_name,
track_name,
AVG(danceability),
AVG(popularity),
AVG(energy)
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name;

--Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.

WITH CTE_average_popularity
AS(
SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM Spotifydata s
GROUP BY s.artist_name
ORDER BY average_popularity desc
)
SELECT 
    artist_name,
    average_popularity,
    'TOP STAR' AS tag
FROM CTE_average_popularity
WHERE average_popularity >= 90;
